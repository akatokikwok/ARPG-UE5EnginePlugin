// Copyright (C) RenZhai.2021.All Rights Reserved.

#pragma once

#include "CoreMinimal.h"
#include "Settings/Core/ObjectStorageSettingsBase.h"
#include "SimpleUnrealPakSettingsEditor.generated.h"

class UVersionControlObject;

/*Packaged platform.*/
UENUM()
enum class EHotUpdateSettingsPlatform :uint8
{
	Windows,
	Linux,
	Mac,
	Android,
	iOS,
	HTML5,
};

UCLASS(config = SimpleUnrealPakSettingsEditor)
class USimpleUnrealPakSettingsEditor : public UObjectStorageSettingsBase
{
	GENERATED_BODY()

public:
	USimpleUnrealPakSettingsEditor();

	UPROPERTY(Transient)
	UVersionControlObject* VersionControlObject;

	UPROPERTY(Transient,EditAnywhere, Category = VersionDiscardSettings, meta = (ToolTip = "You can customize the name of the main version. The version format is xx.xx.xx."))
	TMap<FString,bool> VersionDiscardSettings;

	UPROPERTY(config, EditAnywhere, Category = VersionSettings, meta = (ToolTip = "You can customize the name of the main version. The version format is xx.xx.xx."))
	FName VersionName;

	UPROPERTY(config, EditAnywhere, Category = VersionSettings, meta = (ToolTip = "This content is version base, which is used for automatic iteration."))
	int32 VersionMaximumBase;

	/*Where is the Pak stored after packing. */
	UPROPERTY(config, EditAnywhere, Category = PakSettings, meta = (ToolTip = "Save the path of the generated Pak ."))
	FDirectoryPath PakSavePaths;

	/*Where is the log generated by Pak stored during packaging.*/
	UPROPERTY(config, EditAnywhere, Category = PakSettings, meta = (ToolTip = "Save the path of the log ."))
	FDirectoryPath PakLogPaths;

	/*Select the platform to package.*/
	UPROPERTY(config, EditAnywhere, Category = PakSettings, meta = (ToolTip = "Corresponding to the packaged platform, the default is windows ."))
	EHotUpdateSettingsPlatform PakPlatform;

	/*Is it a resource to cook or not to cook? Resources that do not cook are suitable for the editor to load .*/
	UPROPERTY(config, EditAnywhere, Category = PakSettings, meta = (ToolTip = "Whether to type a good cooked resource ."))
	bool bCooked;

	/**
	* Whether to enable resource reference for packaging. If it is enabled, if the current package references other packages,
	* the resources of other packages will be sent into the current package .
	*/
	//UPROPERTY(config, EditAnywhere, Category = PakSettings, meta = (ToolTip = "Whether to obtain the dependent resources of the packaged resources during the packaging process and then package them ."))
	bool bReferenceAsset;

	/* Compressing the data results in smaller packetse .*/
	UPROPERTY(config, EditAnywhere, Category = PakSettings, meta = (ToolTip = "You get a smaller package ."))
	bool bCompress;

	/* Forces the encoding format bit utf8 of the current packet  .*/
	UPROPERTY(config, EditAnywhere, Category = PakSettings, meta = (ToolTip = "Strong conversion of encoding format to utf8 ."))
	bool bForceUTF8;

	/* Is it packaged in the order of UE4 resources .*/
	UPROPERTY(config, EditAnywhere, Category = PakSettings, meta = (ToolTip = "installed order"))
	bool bOrder;

	/* Do you want to turn on AES encryption .*/
	UPROPERTY(config, EditAnywhere, Category = PakSettings, meta = (ToolTip = "AES encryption or not ."))
	bool bAES;

	/* AES encryption .*/
	UPROPERTY(config, EditAnywhere, Category = PakSettings, meta = (DisplayName = "Secret key", EditCondition = "bAES", ToolTip = "AES specific encryption value ."))
	FGuid AES;

	UPROPERTY(config, EditAnywhere, Category = PakSettings, meta = (ToolTip = "AES encryption or not ."))
	bool bRSA;

public:
	FString GetPlatform() const;

	void BuildVersionToDiscard();
	void UploadDiscardedVersion();
};